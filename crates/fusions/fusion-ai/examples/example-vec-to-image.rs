use fusion_ai::utils::vec_to_image_file;

fn main() -> Result<(), Box<dyn std::error::Error>> {
  // 创建一个简单的 1x1 像素的红色 PNG 图片数据 (最小 PNG 文件)
  // 这是一个有效的 PNG 文件头，表示一个 1x1 像素的红色图片
  let png_data = vec![
    0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, // PNG signature
    0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, // IHDR chunk start
    0x00, 0x00, 0x00, 0x01, // width: 1
    0x00, 0x00, 0x00, 0x01, // height: 1
    0x08, 0x02, 0x00, 0x00, 0x00, // bit depth, color type, compression, filter, interlace
    0x90, 0x77, 0x53, 0xDE, // CRC
    0x00, 0x00, 0x00, 0x0C, 0x49, 0x44, 0x41, 0x54, // IDAT chunk start
    0x08, 0x99, 0x01, 0x01, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, // image data
    0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, // IEND chunk
    0xAE, 0x42, 0x60, 0x82, // IEND CRC
  ];

  // 指定输出文件名
  let output_filename = "test_red_pixel.png";

  // 调用函数进行转换
  match vec_to_image_file(&png_data, output_filename) {
    Ok(()) => {
      println!("操作完成！图片已保存到: {}", output_filename);
    }
    Err(e) => {
      eprintln!("操作失败: {}", e);
    }
  }

  Ok(())
}
