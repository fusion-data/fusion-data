[package]
name = "fusionsql"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
description.workspace = true
license.workspace = true
repository.workspace = true
publish = true

[lints]
workspace = true

[features]
default = ["with-postgres"]
with-ilike = ["fusionsql-core/with-ilike"]
with-postgres = [
  "sqlx/postgres",
  "sea-query-binder/sqlx-postgres",
  "sea-query-binder/postgres-array",
]
with-sqlite = ["sqlx/sqlite", "sea-query-binder/sqlx-sqlite"]
with-uuid = [
  "dep:uuid",
  "sea-query-binder/with-uuid",
  "fusionsql-core/with-uuid",
]
with-rust_decimal = [
  "dep:rust_decimal",
  "sqlx/rust_decimal",
  "sea-query-binder/with-rust_decimal",
]
with-pgvector = ["dep:pgvector"]
with-openapi = ["utoipa", "fusionsql-core/with-openapi"]

[[example]]
name = "example-sqlite"
path = "examples/example-sqlite.rs"
required-features = ["with-sqlite"]

[[example]]
name = "example-db-config"
path = "examples/example-db-config.rs"
required-features = ["with-sqlite"]

[dependencies]
fusion-common = { workspace = true }
fusionsql-macros = { workspace = true }
fusionsql-core = { workspace = true, features = ["with-sea-query"] }
async-trait.workspace = true
regex = { workspace = true }
derive_more.workspace = true
serde.workspace = true
serde_with.workspace = true
serde_json.workspace = true
log.workspace = true
thiserror.workspace = true
tokio.workspace = true
uuid = { workspace = true, optional = true }
rust_decimal = { workspace = true, optional = true }
config = { workspace = true }
duration-str = { workspace = true }
sqlx = { workspace = true }
sea-query.workspace = true
sea-query-binder.workspace = true
pgvector = { workspace = true, optional = true }
chrono = { workspace = true }
tonic = { workspace = true, optional = true }
utoipa = { workspace = true, optional = true }

[dev-dependencies]
anyhow.workspace = true
logforth.workspace = true
