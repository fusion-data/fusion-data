[package]
name = "fusion-common"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
description.workspace = true
license.workspace = true
repository.workspace = true
publish = true
readme = "README.md"

[lints.rust]
unsafe_code = "allow"

[features]
with-uuid = ["dep:uuid", "utoipa/uuid"]
with-ulid = ["dep:ulid", "utoipa/ulid"]
with-openapi = ["dep:utoipa"]
with-db = ["dep:sqlx", "dep:sea-query"]
# WASM compatibility features
with-wasm = []

[dependencies]
thiserror.workspace = true
serde.workspace = true
serde_json.workspace = true
sha2.workspace = true
hmac.workspace = true
base64ct.workspace = true
base16ct.workspace = true
ahash.workspace = true
chrono.workspace = true
duration-str.workspace = true
rand = { workspace = true }
regex.workspace = true
log = { workspace = true }
uuid = { workspace = true, optional = true }
ulid = { workspace = true, optional = true }
utoipa = { workspace = true, optional = true }
sqlx = { workspace = true, optional = true }
sea-query = { workspace = true, optional = true }
libc = { workspace = true }
windows-sys = { workspace = true }


[target.'cfg(target_arch = "wasm32")'.dependencies]
tsify = { workspace = true }
# WASM dependencies
getrandom = { workspace = true, default-features = false, features = [
  "wasm_js",
] }
js-sys = { workspace = true }
wasm-bindgen = { workspace = true }
# rand_wasm = { workspace = true }

[dev-dependencies]
dotenvy.workspace = true
