[workspace]
members = ["crates/fusions/*", "crates/ultimates/*"]
resolver = "2"

[profile.release]
opt-level = 3
codegen-units = 1
lto = true

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.82"
description = "Rust libraries of The fusiondata"
license = "Apache-2.0"
repository = "https://github.com/fusion-data/fusion-data"

[workspace.lints.rust]
unsafe_code = "forbid"
#unused = "allow" # For experimental dev

[workspace.dependencies]
# -- projects begin
ultimate-common = { version = "0.1.0", path = "./crates/ultimates/ultimate-common" }
ultimate-macros = { version = "0.1.0", path = "./crates/ultimates/ultimate-macros" }
ultimate = { version = "0.1.0", path = "./crates/ultimates/ultimate" }
ultimate-api = { version = "0.1.0", path = "./crates/ultimates/ultimate-api" }
ultimate-db = { version = "0.1.0", path = "./crates/ultimates/ultimate-db" }
ultimate-db-macros = { version = "0.1.0", path = "./crates/ultimates/ultimate-db-macros" }
ultimate-web = { version = "0.1.0", path = "./crates/ultimates/ultimate-web" }
ultimate-grpc = { version = "0.1.0", path = "./crates/ultimates/ultimate-grpc" }
fusiondata = { version = "0.1.0", path = "./crates/fusions/fusiondata" }
fusiondata-context = { version = "0.1.0", path = "./crates/fusions/fusiondata-context" }
fusion-flow-api = { version = "0.1.0", path = "./crates/fusions/fusion-flow-api" }
fusion-flow = { version = "0.1.0", path = "./crates/fusions/fusion-flow" }
# -- projects end
# begin -- memory allocator
tikv-jemallocator = "0.6"
# end   -- memory allocator
# -- QRCode
qrcode-rs = { version = "0.1" }
image = { version = "0.25" }
# -- Misc
derive_more = { version = "1.0", features = ["from", "display"] }
toml = "0.8"
config = { version = "0.14", default-features = false, features = [
    "toml",
    "yaml",
    "json5",
    "json",
] }
itertools = "0.13"
regex = { version = "1", features = ["unicode-case"] }
rand = "0.8"
bytes = "1"
ulid = { version = "1", features = ["serde", "uuid"] }
uuid = { version = "1", features = [
    "v4",
    "v7",
    "fast-rng",
    "serde",
    #    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
] }
rust_decimal = { version = "1", features = ["serde-str"] }
rust_decimal_macros = "1"
typed-builder = "0.20"
derive-getters = "0.5"
clap = { version = "4.5", features = ["derive"] }
o2o = { version = "0.4" }
secrecy = { version = "0.10", features = ["serde"] }
dashmap = { version = "6.1" }
inventory = { version = "0.3" }
# Make retry like a built-in feature provided by Rust.
backon = { version = "1.2" }
# -- Helpful macros for working with enums and strings
enum-iterator = "2"
strum = { version = "0.26", features = ["derive"] }
enum_dispatch = "0.3"
# -- Error
anyhow = "1"
thiserror = "2"
# -- Macros
quote = "1"
syn = { version = "2", features = ["full"] }
proc-macro2 = "1"
# -- Crypt & Encoding
base16ct = { version = "0.2", features = ["alloc"] }
base64ct = { version = "1", features = ["std", "alloc"] }
aes-gcm = "0.10"
hmac = "0.12"
sha2 = "0.10"
argon2 = "0.5"
# -- JWT & JWE
josekit = "0.10"
aliri = "0.6"
# -- Async
futures = "0.3"
futures-util = "0.3"
async-trait = "0.1"
async-stream = "0.3"
tokio = { version = "1", default-features = false, features = [
    "full",
    "tracing",
] }
tokio-stream = { version = "0.1", features = ["full"] }
tokio-util = { version = "0.7", features = ["full", "tracing"] }
tokio-test = { version = "0.4" }
# -- Logging
log = "0.4"
env_logger = "0.11"
# -- Tracing
tracing = { version = "0.1", features = ["log"] }
tracing-log = "0.2"
tracing-subscriber = { version = "0.3", features = [
    "registry",
    "env-filter",
    "chrono",
    "json",
] }
tracing-appender = "0.2"
init-tracing-opentelemetry = { version = "0.24", features = [
    "tracing_subscriber_ext",
] }
tracing-opentelemetry-instrumentation-sdk = "0.24"
# -- Time
chrono = { version = "0.4", default-features = false, features = [
    "std",
    "clock",
    "serde",
] }
chrono-tz = "0.10"
duration-str = "0.11"
# -- scheduler
croner = "2.1"
hierarchical_hash_wheel_timer = { version = "1.3", features = ["uuid"] }
tokio-cron-scheduler = { version = "0.13", features = ["has_bytes", "signal"] }
# -- Database
sqlx = { version = "0.8", features = [
    "runtime-tokio",
    "postgres",
    "chrono",
    "rust_decimal",
    "json",
    "uuid",
] }
sea-query = { version = "0.32", features = ["attr", "thread-safe"] }
sea-query-binder = { version = "0.7", features = [
    "sqlx-postgres",
    "postgres-array",
    "with-json",
    "with-chrono",
    "with-rust_decimal",
    "with-uuid",
] }
rusqlite = { version = "0.32", features = ["bundled"] }
sea-query-rusqlite = { version = "0.7", features = [
    "postgres-array",
    "with-chrono",
    "with-json",
    "with-rust_decimal",
    "with-uuid",
] }
# -- Serde
serde = { version = "1", features = ["derive"] }
serde_with = { version = "3", features = ["chrono_0_4"] }
serde_json = { version = "1" }
serde_repr = "0.1"
# -- Web
url = "2.4"
urlencoding = "2.1"
serde_urlencoded = "0.7"
headers = "0.4"
mime = "0.3"
http = "1.1"
reqwest = { version = "0.12", features = ["json"] }
hyper = "1"
hyper-util = "0.1"
tower = "0.5"
tower-http = { version = "0.6", features = [
    "fs",
    "trace",
    "cors",
    "compression-full",
] }
tower-service = { version = "0.3" }
tower-cookies = "0.10"
cookie = "0.18"
axum = { version = "0.7", features = ["macros", "form"] }
axum-extra = { version = "0.9", features = ["typed-header"] }
axum-macros = { version = "0.4" }
axum-tracing-opentelemetry = "0.24"
# # openapi
# utoipa = { version = "5.1", features = [
#     "axum_extras",
#     "chrono",
#     "decimal",
#     "uuid",
#     "repr",
#     "preserve_order",
#     "preserve_path_order",
# ] }
# utoipa-scalar = { version = "0.2", features = ["axum"] }
# -- Dev/Test
asserhttp = { version = "0.7", features = ["reqwest"] }
dotenvy = "0.15"
# -- Template Engin
minijinja = { version = "2.5" }
# -- Data Science
polars = "0.44"
# An Excel/OpenDocument Spreadsheets reader and deserializer in pure rust
calamine = "0.26"
# -- Valkey & Redis client
fred = { version = "9" }
# -- RPC
tonic = "0.12"
tonic-types = "0.12"
tonic-reflection = "0.12"
tonic-web = "0.12"
tonic-tracing-opentelemetry = "0.24"
tonic-build = { version = "0.12", features = ["prost"] }
prost = "0.13"
prost-build = "0.13"
prost-types = "0.13"

# -- opendal
opendal = { version = "0.50", features = ["services-obs"] }

pretty_assertions = "1.4"
